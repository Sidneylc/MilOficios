@model MilOficios.Models.Lugar

<h2>Edit</h2>
@Messages.Message("inUse", "Edit", "danger", "Este Lugar está en uso " +
    "en este momento.")

@using (Ajax.BeginForm("Update", new { Controller = "Lugar" },
                        new AjaxOptions
                        {
                            HttpMethod = "POST",
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = "modal-body",
                            OnSuccess = "lugar.success('edit');" +
                            "lugar.removeHubLugar('" + @Model.Codigo + "');"
                        },
                        htmlAttributes: new { id = "editForm" }
                      )
        )
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Lugar</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Codigo)

        <div class="form-group">
            @Html.LabelFor(model => model.Ciudad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ciudad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ciudad, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" id = "btn-save">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(function () {
        $.validator.unobtrusive.parse("#editForm");
        $('#inUse').addClass('hidden');
        lugar.addLugar("@Model.Codigo");
        lugar.validate("@Model.Codigo");
    });

    lugar.closeModal = function () {
        if (!lugar.recordInUse)
            lugar.removeHubLugar("@Model.Codigo");
    };
</script>